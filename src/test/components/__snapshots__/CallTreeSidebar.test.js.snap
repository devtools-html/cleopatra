// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CallTreeSidebar matches the snapshots when displaying data about the currently selected node 1`] = `
<div
  className="sidebar sidebar-calltree"
>
  Select a node to display some information about it.
</div>
`;

exports[`CallTreeSidebar matches the snapshots when displaying data about the currently selected node 2`] = `
<aside
  className="sidebar sidebar-calltree"
>
  <header
    className="sidebar-titlegroup"
  >
    <h2
      className="sidebar-title can-select-content"
      title="Cjs
(click to select)"
    >
      <input
        className="can-select-content-input"
        onBlur={[Function]}
        onFocus={[Function]}
        readOnly={true}
        value="Cjs"
      />
    </h2>
  </header>
  <h3
    className="sidebar-title2"
  >
    This selected call node
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      50
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      —
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
  <h3
    className="sidebar-title2"
  >
    This function across the entire tree
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      50
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      —
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
</aside>
`;

exports[`CallTreeSidebar matches the snapshots when displaying data about the currently selected node 3`] = `
<aside
  className="sidebar sidebar-calltree"
>
  <header
    className="sidebar-titlegroup"
  >
    <h2
      className="sidebar-title can-select-content"
      title="D
(click to select)"
    >
      <input
        className="can-select-content-input"
        onBlur={[Function]}
        onFocus={[Function]}
        readOnly={true}
        value="D"
      />
    </h2>
  </header>
  <h3
    className="sidebar-title2"
  >
    This selected call node
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      25
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      —
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
  <h3
    className="sidebar-title2"
  >
    This function across the entire tree
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      25
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      —
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
</aside>
`;

exports[`CallTreeSidebar matches the snapshots when displaying data about the currently selected node 4`] = `
<aside
  className="sidebar sidebar-calltree"
>
  <header
    className="sidebar-titlegroup"
  >
    <h2
      className="sidebar-title can-select-content"
      title="H
(click to select)"
    >
      <input
        className="can-select-content-input"
        onBlur={[Function]}
        onFocus={[Function]}
        readOnly={true}
        value="H"
      />
    </h2>
  </header>
  <h3
    className="sidebar-title2"
  >
    This selected call node
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      50
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1ms (25%)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – self time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
  <h3
    className="sidebar-title2"
  >
    This function across the entire tree
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      50
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1ms (25%)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – self time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
</aside>
`;

exports[`CallTreeSidebar matches the snapshots when displaying data about the currently selected node 5`] = `
<aside
  className="sidebar sidebar-calltree"
>
  <header
    className="sidebar-titlegroup"
  >
    <h2
      className="sidebar-title can-select-content"
      title="Ejs
(click to select)"
    >
      <input
        className="can-select-content-input"
        onBlur={[Function]}
        onFocus={[Function]}
        readOnly={true}
        value="Ejs"
      />
    </h2>
  </header>
  <h3
    className="sidebar-title2"
  >
    This selected call node
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      25
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1ms (25%)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – self time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
  <h3
    className="sidebar-title2"
  >
    This function across the entire tree
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      50
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2ms (50%)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – self time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
</aside>
`;

exports[`CallTreeSidebar matches the snapshots when displaying data about the currently selected node in an inverted tree 1`] = `
<div
  className="sidebar sidebar-calltree"
>
  Select a node to display some information about it.
</div>
`;

exports[`CallTreeSidebar matches the snapshots when displaying data about the currently selected node in an inverted tree 2`] = `
<aside
  className="sidebar sidebar-calltree"
>
  <header
    className="sidebar-titlegroup"
  >
    <h2
      className="sidebar-title can-select-content"
      title="Ejs
(click to select)"
    >
      <input
        className="can-select-content-input"
        onBlur={[Function]}
        onFocus={[Function]}
        readOnly={true}
        value="Ejs"
      />
    </h2>
  </header>
  <h3
    className="sidebar-title2"
  >
    This selected call node
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      50
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2ms (50%)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
  <h3
    className="sidebar-title2"
  >
    This function across the entire tree
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      50
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2ms (50%)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – self time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      JavaScript interpreter
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
</aside>
`;

exports[`CallTreeSidebar matches the snapshots when displaying data about the currently selected node in an inverted tree 3`] = `
<aside
  className="sidebar sidebar-calltree"
>
  <header
    className="sidebar-titlegroup"
  >
    <h2
      className="sidebar-title can-select-content"
      title="H
(click to select)"
    >
      <input
        className="can-select-content-input"
        onBlur={[Function]}
        onFocus={[Function]}
        readOnly={true}
        value="H"
      />
    </h2>
  </header>
  <h3
    className="sidebar-title2"
  >
    This selected call node
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      25
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1ms (25%)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
  <h3
    className="sidebar-title2"
  >
    This function across the entire tree
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      50
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1ms (25%)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – self time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
</aside>
`;

exports[`CallTreeSidebar matches the snapshots when displaying data about the currently selected node in an inverted tree 4`] = `
<aside
  className="sidebar sidebar-calltree"
>
  <header
    className="sidebar-titlegroup"
  >
    <h2
      className="sidebar-title can-select-content"
      title="H
(click to select)"
    >
      <input
        className="can-select-content-input"
        onBlur={[Function]}
        onFocus={[Function]}
        readOnly={true}
        value="H"
      />
    </h2>
  </header>
  <h3
    className="sidebar-title2"
  >
    This selected call node
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      25
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      —
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
  <h3
    className="sidebar-title2"
  >
    This function across the entire tree
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      50
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1ms (25%)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      2
      ms (
      100
      %)
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – self time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
</aside>
`;

exports[`CallTreeSidebar matches the snapshots when displaying data about the currently selected node in an inverted tree 5`] = `
<aside
  className="sidebar sidebar-calltree"
>
  <header
    className="sidebar-titlegroup"
  >
    <h2
      className="sidebar-title can-select-content"
      title="A
(click to select)"
    >
      <input
        className="can-select-content-input"
        onBlur={[Function]}
        onFocus={[Function]}
        readOnly={true}
        value="A"
      />
    </h2>
  </header>
  <h3
    className="sidebar-title2"
  >
    This selected call node
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      25
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      —
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    <div
      className="sidebar-label"
    >
      Native code
      :
    </div>,
    <div
      className="sidebar-value"
    >
      1
      ms (
      100
      %)
    </div>,
  ]
  <h3
    className="sidebar-title2"
  >
    This function across the entire tree
  </h3>
  Array [
    <div
      className="sidebar-label"
    >
      Running Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      4
      ms (
      100
      %)
    </div>,
  ]
  Array [
    <div
      className="sidebar-label"
    >
      Self Time
      :
    </div>,
    <div
      className="sidebar-value"
    >
      —
    </div>,
  ]
  <h4
    className="sidebar-title3"
  >
    Implementation – running time
  </h4>
  Array [
    Array [
      <div
        className="sidebar-label"
      >
        Native code
        :
      </div>,
      <div
        className="sidebar-value"
      >
        2
        ms (
        50
        %)
      </div>,
    ],
    Array [
      <div
        className="sidebar-label"
      >
        JavaScript interpreter
        :
      </div>,
      <div
        className="sidebar-value"
      >
        2
        ms (
        50
        %)
      </div>,
    ],
  ]
</aside>
`;
